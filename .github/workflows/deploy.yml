

name: Deploy to GCP

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: paved-road-intuit
      REGION: us-central1
      IMAGE_NAME: demo-app
      CLUSTER_NAME: demo-cluster

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: mvn clean install

    - name: Run tests
      run: mvn test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # - name: Log in to Google Container Registry
    #   run: |
    #     echo '${{ secrets.GCP_SERVICE_ACCOUNT_CONFIG }}' > gcp-key.json
    #     cat gcp-key.json | docker login -u _json_key --password-stdin https://gcr.io
        
    # - name: Configure gcloud CLI
    #   uses: google-github-actions/setup-gcloud@v1
    #   with:
    #     service_account_key: ${{ secrets.GCP_CREDENTIALS }}
    #     project_id: ${{ env.PROJECT_ID }}

    # - name: Install GCP components
    #   run: gcloud components install gke-gcloud-auth-plugin

    # - name: Authenticate gcloud
    #   run: |
    #     gcloud auth activate-service-account --key-file=<(echo '${{ secrets.GCP_CREDENTIALS }}')
    #     gcloud config set project ${{ env.PROJECT_ID }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:latest .

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve -var "project_id=${{ env.PROJECT_ID }}" -var "region=${{ env.REGION }}" -var "image_name=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}"
      working-directory: terraform

